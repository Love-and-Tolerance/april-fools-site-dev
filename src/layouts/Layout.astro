---
import Footer from '../components/Footer.astro'
import Header from '../components/Header.astro'
import Site from '../data/site.json'

export interface Props {
  title?: string
  description?: string
  menuEntry?: string
}

const Props = Astro.props as Props

const primaryColorRGB = (() => {
  const n = parseInt(Site.primaryColor.replace(/^#/, ''), 16)
  const r = n >> 16 & 0xFF
  const g = n >> 8 & 0xFF
  const b = n & 0xFF

  return [r, g, b]
})()
---

<!DOCTYPE html>
<html lang="en">

<head>
  <title>{ Props.title === undefined ? '' : `${Props.title} - ` }{ Site.title }</title>

  <meta name="viewport" content="width = device-width, user-scalable = no" />
  <meta charset="utf-8" />

  <!-- OpenGraph properties -->
  <meta property="og:title" content={ Props.title ?? Site.title } />
  <meta property="og:locale" content="en_US" />
  <meta name="description" content={ Props.description ?? Site.description } />
  <meta property="og:description" content={ Props.description ?? Site.description } />
  <link rel="canonical" href={ Astro.canonicalURL.href } />
  <meta property="og:url" content={ Astro.site } />
  <meta property="og:site_name" content={ Site.name } />

  <meta property="og:image" content={ new URL('/banner.png', Astro.site) }>
  <meta name="twitter:card" content="summary_large_image">
  <meta name="theme-color" content={ Site.primaryColor }>

  <link rel="shortcut icon" href="/favicon.ico">
</head>

<body>
  <div class="body-content">
    <div class="body-content__wrapper">
      <Header menuEntry={ Props.menuEntry } />

      <main class="body-content__main">
        <slot />
      </main>

      <Footer />
    </div>
  </div>
</body>

</html>

<style lang="scss" is:global define:vars={{ 'primary-color-rgb' : primaryColorRGB }}>
  @import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap");

  :root {
    --max-content-width: 1080px;
    --header-height: 4rem;
    --gutter: 24px;
    --margin: 1rem;
    --border-radius: 8px;

    --primary-color: rgb(var(--primary-color-rgb));

    --shadow-color: #{rgba(black, 0.125)};
    --box-shadow: 0 0 16px var(--shadow-color);
    --drop-shadow: 0 4px 8px var(--shadow-color);
  }

  @media (max-width: 386px) {
    :root {
      --gutter: var(--margin);
    }
  }

  * {
    margin: 0;
    border: 0;
    padding: 0;
    outline: none;
    box-sizing: border-box;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.75rem;
  }

  h4 {
    font-size: 1.5rem;
  }

  h5 {
    font-size: 1.25rem;
  }

  h6 {
    font-size: 1rem;
  }

  .body-content__main {
    display: flex;
    flex-direction: column;
    gap: var(--margin);

    a {
      color: var(--primary-color);
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }
    }
  }

  ul,
  ol {
    margin-left: 1.5em;
  }

  code {
    background: whitesmoke;
    border: 1px solid rgba(black, 0.1);
    border-radius: 0.25em;
    padding: 0.25em;
  }

  p img {
    display: block;
    margin: 0 auto;

    width: 100%;
  }
</style>

<style lang="scss">
  body {
    background: whitesmoke;
    font-family: "Open Sans";
    line-height: 1.5;
  }

  .body-content {
    background: white;
    box-shadow: var(--box-shadow);
    margin: 0 auto;

    min-height: 100vh;
    max-width: var(--max-content-width);

    position: relative;

    &,
    &__wrapper {
      display: flex;
      flex-direction: column;
    }

    &__wrapper,
    &__main {
      flex-grow: 1;
    }

    &__main {
      margin-top: var(--header-height);
      padding: var(--gutter);
    }
  }
</style>
