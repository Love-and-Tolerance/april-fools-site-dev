---
import Menus from '../data/menus.json';
import Icon from './Icon.astro';

export interface Props {
  menuEntry?: string | undefined
}

const Props = Astro.props as Props

const isCurrentMenuEntry = (title: string) => title === Props.menuEntry
---

<header class="header">
  <div class="header__logo logo">
    <a href={ Astro.site.pathname }>
      <img class="logo__image" src="/lt.svg" alt="Love & Tolerance logo">
    </a>
  </div>

  <label class="header__bars">
    <Icon icon="bars" />
  </label>

  <nav class="header__nav nav">
    {Menus.main.map(({ title, path }) => (
    <a class:list={ ['nav__link', { 'nav__link--current' : isCurrentMenuEntry(title) }] } href={ path }>
      { title }
    </a>
    ))}
  </nav>
</header>

<style lang="scss">
  .header {
    background: rgba(white, 0.9);
    backdrop-filter: blur(16px);
    user-select: none;

    max-width: var(--max-content-width);
    width: 100%;
    height: var(--header-height);

    position: fixed;
    top: 0;
    z-index: 10;

    display: flex;
    align-items: center;
    justify-content: space-between;

    // Shadow, because overflow property doesn't cut off position-fixed elements
    &::after {
      content: "";

      background: linear-gradient(rgba(black, 0.1), transparent);
      pointer-events: none;

      width: 100%;
      height: 16px;

      position: absolute;
      left: 0;
      top: 100%;
      z-index: -1;
    }

    &__logo {
      padding: var(--margin) var(--gutter);
      height: 100%;

      .logo__image {
        height: 100%;
      }
    }

    &__bars {
      color: #323232;
      cursor: default;
      font-size: 1.5rem;
      transition: color 100ms;

      width: 4rem;
      height: 4rem;

      display: flex;
      align-items: center;
      justify-content: center;

      &:hover {
        color: var(--primary-color);
      }
    }

    &__nav {
      background: inherit;
      box-shadow: var(--drop-shadow);
      font-weight: bold;
      opacity: 0;
      pointer-events: none;
      transition: opacity 100ms;

      width: 100%;

      position: absolute;
      top: 100%;
      left: 0;

      display: flex;
      flex-direction: column;

      .nav__link {
        color: #323232;
        display: block;
        padding: var(--margin) var(--gutter);
        text-decoration: none;
        transition: background-color 100ms, color 100ms;

        &:hover {
          background: rgba(var(--primary-color-rgb), 0.75);
          color: white;
        }

        &--current {
          background: var(--primary-color);
          color: white;
        }
      }
    }

    &__bars:hover+&__nav,
    &__nav:hover {
      opacity: 1;
      pointer-events: unset;
    }
  }

  @media (min-width: 600px) {
    .header {
      &__bars {
        display: none;
      }

      &__nav {
        background: none;
        box-shadow: none;
        margin-right: var(--gutter);
        opacity: 1;
        pointer-events: unset;

        height: 100%;
        width: auto;

        position: static;

        display: flex;
        flex-direction: row;

        .nav__link {
          padding: 0 var(--gutter);

          height: 100%;

          display: flex;
          align-items: center;
        }
      }
    }
  }
</style>
